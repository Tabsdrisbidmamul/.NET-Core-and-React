{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/common/constants/constant.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/stores.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropZone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/form/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileFollowings.tsx","features/profiles/ProfileActivityCard.tsx","features/profiles/ProfileListCard.tsx","features/profiles/ProfileActivity.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","app/layout/ScrollToTop.tsx","reportWebVitals.ts","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","console","log","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","edit","attend","Account","current","login","user","register","fbLogin","accessToken","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowing","predicate","activities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","city","date","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","setLoadingInitial","axiosParams","result","setActivity","setPagination","loadActivity","getActivity","setSelectedActivity","updateHostProfile","userStore","hostUsername","host","updateAttendeeProfile","attendees","attendeeProfile","isGoing","some","isHost","find","x","Date","state","setLoading","createActivity","attendee","newActivity","runInAction","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","format","constants","ProfileStore","loadingProfile","uploading","loadingFollowings","followings","activeTab","activityTab","userActivities","loadingActivities","setActiveTab","setActivityTab","loadProfile","setLoadingProfile","setProfile","setDisplayName","setUploading","photo","photos","isMain","setImage","p","activityStore","setLoadingFollowing","followingCount","loadFollowings","profileFollowings","setLoadingActivities","formatDates","map","UserStore","fbAccessToken","fbLoading","creds","setToken","setUser","modalStore","closeModal","logout","window","localStorage","removeItem","name","getUser","setFbLoading","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","e","finally","scope","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","None","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","isLoggedIn","Menu","inverted","fixed","Container","Item","as","NavLink","exact","to","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","Reveal","animated","Content","visible","width","fluid","color","hidden","basic","preventDefault","handleFollow","Card","Header","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","Popup","hoverable","trigger","size","circular","bordered","Segment","Group","Label","attached","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","activityList","sub","vertical","marginTop","active","has","onChange","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","Divider","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","ribbon","zIndex","top","verticalAlign","border","resetForm","onKeyPress","shiftKey","Comment","chatComment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","PhotoWidgetCropper","imagePreview","setCropper","preview","initialAspectRatio","viewMode","guides","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropZone","setFiles","dzStyles","borderStyle","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","handlePhotoUpload","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","isCurrentUser","addPhotoMode","setAddPhotoMode","target","setTarget","deleteTarget","setDeleteTarget","Tab","Pane","itemsPerRow","currentTarget","handleSetMainPhoto","handleDeletePhoto","setEditMode","follower","ProfileActivityCard","objectFit","Meta","panes","menuItem","menu","menuPosition","onTabChange","activeIndex","Statistic","PrivateRoute","Component","component","rest","location","useLocation","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","ScrollToTop","pathname","scrollTo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.d73ad5e1.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PagingParams {\r\n  pageNumber: number;\r\n  pageSize: number;\r\n\r\n  constructor(pageNumber = 1, pageSize = 2) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import { Activity, ActivityFormValues } from 'app/models/activity';\r\nimport { PaginatedResult } from 'app/models/pagination';\r\nimport { Photo, Profile, UserActivity } from 'app/models/profile';\r\nimport { User, UserFormValues } from 'app/models/user';\r\nimport { store } from 'app/stores/stores';\r\nimport axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { history } from 'index';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.commonStore.token;\r\n\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    if (process.env.NODE_ENV === 'development') await sleep(1000);\r\n\r\n    const pagination = response.headers['pagination'];\r\n\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n    console.log(error.response);\r\n    switch (status) {\r\n      case 400:\r\n        if (typeof data === 'string') {\r\n          toast.error(data);\r\n        }\r\n        if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n          history.push('/not-found');\r\n        }\r\n        if (data.errors!) {\r\n          const modalStateErrors = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modalStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n\r\n          throw modalStateErrors.flat();\r\n        }\r\n        break;\r\n      case 401:\r\n        toast.error('unauthorised');\r\n        break;\r\n      case 404:\r\n        history.push('/not-found');\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push('/server-error');\r\n        break;\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams) =>\r\n    axios.get<PaginatedResult<Activity[]>>('/activities', { params }).then(responseBody),\r\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\r\n  edit: (activity: ActivityFormValues) =>\r\n    requests.put<void>(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Account = {\r\n  current: () => requests.get<User>('/account'),\r\n  login: (user: UserFormValues) => requests.post<User>('/account/login', user),\r\n  register: (user: UserFormValues) => requests.post<User>('/account/register', user),\r\n  fbLogin: (accessToken: string) =>\r\n    requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n\r\n    formData.append('File', file);\r\n\r\n    return axios.post<Photo>('/photos', formData, {\r\n      headers: { 'Content-type': 'multipart/form-data' },\r\n    });\r\n  },\r\n  setMainPhoto: (id: string) => requests.post<void>(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.del<void>(`/photos/${id}`),\r\n  updateProfile: (profile: Partial<Profile>) => requests.put<void>('/profiles', profile),\r\n  updateFollowing: (username: string) => requests.post<void>(`/follow/${username}`, {}),\r\n  listFollowing: (username: string, predicate: string) =>\r\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  activities: (username: string, predicate: string) =>\r\n    requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`),\r\n};\r\n\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  Profiles,\r\n};\r\n\r\nexport default agent;\r\n","import { Profile } from './profile';\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  title: string;\r\n  date: Date | null;\r\n  description: string;\r\n  category: string;\r\n  city: string;\r\n  venue: string;\r\n  hostUsername: string;\r\n  isCancelled: boolean;\r\n  isGoing: boolean;\r\n  isHost?: boolean;\r\n  host: Profile | undefined;\r\n  attendees: Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n  constructor(init?: ActivityFormValues) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n  id?: string = undefined;\r\n  title = '';\r\n  category = '';\r\n  description = '';\r\n  city = '';\r\n  date: Date | null = null;\r\n  venue = '';\r\n\r\n  constructor(activity?: ActivityFormValues) {\r\n    if (activity) {\r\n      this.id = activity.id;\r\n      this.title = activity.title;\r\n      this.category = activity.category;\r\n      this.city = activity.city;\r\n      this.venue = activity.venue;\r\n      this.date = activity.date;\r\n    }\r\n  }\r\n}\r\n","import { User } from './user';\r\n\r\nexport interface Profile {\r\n  username: string;\r\n  displayName: string;\r\n  image?: string;\r\n  bio?: string;\r\n  followersCount: number;\r\n  followingCount: number;\r\n  following: boolean;\r\n  photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n  constructor(user: User) {\r\n    this.username = user.username;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n  id: string;\r\n  title: string;\r\n  category: string;\r\n  date: Date;\r\n}\r\n","import agent from 'app/api/agent';\r\nimport { Activity, ActivityFormValues } from 'app/models/activity';\r\nimport { Pagination, PagingParams } from 'app/models/pagination';\r\nimport { Profile } from 'app/models/profile';\r\nimport { format } from 'date-fns';\r\nimport { makeAutoObservable, reaction, runInAction } from 'mobx';\r\nimport { store } from './stores';\r\n\r\nexport default class ActivityStore {\r\n  activityRegistry = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set('all', true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.activityRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    );\r\n  }\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => {\r\n    this.pagingParams = pagingParams;\r\n  };\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n    params.append('pageSize', this.pagingParams.pageSize.toString());\r\n\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === 'startDate') {\r\n        params.append('startDate', (value as Date).toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n\r\n    return params;\r\n  }\r\n\r\n  setPredicate = (predicate: string, value: any) => {\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if (key !== 'startDate') this.predicate.delete(key);\r\n      });\r\n    };\r\n\r\n    switch (predicate) {\r\n      case 'all':\r\n        resetPredicate();\r\n        this.predicate.set('all', true);\r\n        break;\r\n      case 'isGoing':\r\n        resetPredicate();\r\n        this.predicate.set('isGoing', true);\r\n        break;\r\n      case 'isHost':\r\n        resetPredicate();\r\n        this.predicate.set('isHost', true);\r\n        break;\r\n      case 'startDate':\r\n        this.predicate.delete('startDate');\r\n        this.predicate.set('startDate', value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activityRegistry.values()).sort(\r\n      (a, b) => a.date!.getTime() - b.date!.getTime()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns back an array of arrays which are grouped by date and activityList\r\n   * [\r\n   *  [2021-05-09, [activityObj1, activityObj2, activityObj3]],\r\n   *  [2021-09-06, [activityObj1, activityObj2, activityObj3]]\r\n   * ]\r\n   *\r\n   */\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.activitiesByDate.reduce((activities, activity) => {\r\n        const date = format(activity.date!, 'dd MMM yyyy');\r\n        activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n        return activities;\r\n      }, {} as { [key: string]: Activity[] })\r\n    );\r\n  }\r\n\r\n  loadActivities = async () => {\r\n    this.setLoadingInitial(true);\r\n    try {\r\n      const result = await agent.Activities.list(this.axiosParams);\r\n\r\n      result.data.forEach((activity) => {\r\n        this.setActivity(activity);\r\n      });\r\n\r\n      this.setPagination(result.pagination);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setLoadingInitial(false);\r\n    }\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  };\r\n\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity !== undefined) {\r\n      this.setSelectedActivity(activity);\r\n      return activity;\r\n    } else {\r\n      this.setLoadingInitial(true);\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        this.setActivity(activity);\r\n        this.setSelectedActivity(activity);\r\n\r\n        return activity;\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        this.setLoadingInitial(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  updateHostProfile = (profile: Profile) => {\r\n    const user = store.userStore.user;\r\n\r\n    if (user) {\r\n      this.activityRegistry.forEach((activity) => {\r\n        if (activity.hostUsername === user.username) {\r\n          activity.host!.image = profile.image;\r\n\r\n          this.updateAttendeeProfile(activity.attendees, user, profile);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  private updateAttendeeProfile = (attendees: Profile[], user: Profile, profile: Profile) => {\r\n    attendees.forEach((attendeeProfile) => {\r\n      if (attendeeProfile.username === user.username) {\r\n        attendeeProfile.image = profile.image;\r\n      }\r\n    });\r\n  };\r\n\r\n  private setActivity = (activity: Activity) => {\r\n    const user = store.userStore.user;\r\n\r\n    if (user) {\r\n      activity.isGoing = activity.attendees!.some((a) => a.username === user.username);\r\n\r\n      activity.isHost = activity.hostUsername === user?.username;\r\n      activity.host = activity.attendees?.find((x) => x.username === activity.hostUsername);\r\n    }\r\n\r\n    activity.date = new Date(activity.date!);\r\n    this.activityRegistry.set(activity.id, activity);\r\n  };\r\n\r\n  private getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  };\r\n\r\n  private setSelectedActivity = (activity: Activity) => {\r\n    this.selectedActivity = activity;\r\n  };\r\n\r\n  setLoadingInitial = (state: boolean) => {\r\n    this.loadingInitial = state;\r\n  };\r\n\r\n  setLoading = (state: boolean) => {\r\n    this.loading = state;\r\n  };\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!);\r\n\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const newActivity = new Activity(activity);\r\n\r\n      newActivity.hostUsername = user!.username;\r\n      newActivity.attendees = [attendee];\r\n      this.setActivity(newActivity);\r\n\r\n      runInAction(() => {\r\n        this.selectedActivity = newActivity;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateActivity = async (activity: ActivityFormValues) => {\r\n    try {\r\n      await agent.Activities.edit(activity);\r\n\r\n      runInAction(() => {\r\n        if (activity.id) {\r\n          let updatedActivity = { ...this.getActivity(activity.id), ...activity };\r\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n          this.selectedActivity = updatedActivity as Activity;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.setLoading(true);\r\n\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(() => {\r\n        this.activityRegistry.delete(id);\r\n        this.editMode = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setLoading(false);\r\n    }\r\n  };\r\n\r\n  updateAttendance = async () => {\r\n    const user = store.userStore.user;\r\n    this.setLoading(true);\r\n\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        if (this.selectedActivity?.isGoing) {\r\n          this.selectedActivity.attendees = this.selectedActivity.attendees?.filter(\r\n            (a) => a.username !== user?.username\r\n          );\r\n          this.selectedActivity.isGoing = false;\r\n        } else {\r\n          const attendee = new Profile(user!);\r\n          this.selectedActivity?.attendees?.push(attendee);\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n\r\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n      });\r\n    } catch (error) {\r\n    } finally {\r\n      this.setLoading(false);\r\n    }\r\n  };\r\n\r\n  cancelActivityToggle = async () => {\r\n    this.setLoading(true);\r\n\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n\r\n      runInAction(() => {\r\n        this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setLoading(false);\r\n    }\r\n  };\r\n\r\n  clearSelectedActivity = () => (this.selectedActivity = undefined);\r\n\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.activityRegistry.forEach((activity) => {\r\n      activity.attendees.forEach((attendee) => {\r\n        if (attendee.username === username) {\r\n          attendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n          attendee.following = !attendee.following;\r\n        }\r\n      });\r\n    });\r\n  };\r\n}\r\n","export const constants = {\r\n  jwt: 'jwt',\r\n  activities: '/activities',\r\n  home: '/',\r\n  createActivity: '/create-activity',\r\n  login: '/login',\r\n};\r\n","import agent from 'app/api/agent';\r\nimport { Photo, Profile, UserActivity } from 'app/models/profile';\r\nimport { makeAutoObservable, reaction, runInAction } from 'mobx';\r\nimport { store } from './stores';\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  loadingFollowings = false;\r\n  followings: Profile[] = [];\r\n  activeTab = 0;\r\n  activityTab = 0;\r\n  userActivities: UserActivity[] = [];\r\n  loadingActivities = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 2) {\r\n          let predicate = '';\r\n          switch (this.activityTab) {\r\n            case 0:\r\n              predicate = 'future';\r\n              break;\r\n            case 1:\r\n              predicate = 'past';\r\n              break;\r\n            case 3:\r\n              predicate = 'hosting';\r\n              break;\r\n          }\r\n          this.loadActivities(this.profile!.username, predicate);\r\n        } else {\r\n          this.userActivities = [];\r\n        }\r\n\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? 'followers' : 'following';\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n\r\n    reaction(\r\n      () => this.activityTab,\r\n      (activityTab) => {\r\n        let predicate = '';\r\n        switch (activityTab) {\r\n          case 0:\r\n            predicate = 'future';\r\n            break;\r\n          case 1:\r\n            predicate = 'past';\r\n            break;\r\n          case 3:\r\n            predicate = 'hosting';\r\n            break;\r\n        }\r\n        this.loadActivities(this.profile!.username, predicate);\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n\r\n  setActivityTab = (activeTab: any) => {\r\n    this.activityTab = activeTab;\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.setLoadingProfile(true);\r\n\r\n    try {\r\n      this.setProfile(await agent.Profiles.get(username));\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setLoadingProfile(false);\r\n    }\r\n  };\r\n\r\n  updateProfile = async (profile: Partial<Profile>) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n\r\n      runInAction(() => {\r\n        if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\r\n          store.userStore.setDisplayName(profile.displayName);\r\n        }\r\n        this.profile = { ...this.profile, ...(profile as Profile) };\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.setUploading(true);\r\n\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setUploading(false);\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.setLoading(true);\r\n    try {\r\n      if (photo.isMain) {\r\n        return;\r\n      }\r\n\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n\r\n          store.activityStore.updateHostProfile(this.profile);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setLoading(false);\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.setLoading(true);\r\n\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n\r\n      runInAction(() => {\r\n        this.profile!.photos = this.profile?.photos?.filter((p) => p.id !== photo.id);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setLoading(false);\r\n    }\r\n  };\r\n\r\n  setLoading = (state: boolean) => {\r\n    this.loading = state;\r\n  };\r\n\r\n  setLoadingFollowing = (state: boolean) => {\r\n    this.loadingFollowings = state;\r\n  };\r\n\r\n  setLoadingProfile = (state: boolean) => {\r\n    this.loadingProfile = state;\r\n  };\r\n\r\n  setUploading = (state: boolean) => {\r\n    this.uploading = state;\r\n  };\r\n\r\n  setProfile = (profile: Profile) => {\r\n    this.profile = profile;\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.setLoading(true);\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.username &&\r\n          this.profile.username === username\r\n        ) {\r\n          following ? this.profile.followersCount++ : this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n\r\n        if (this.profile && this.profile.username === store.userStore.user?.username) {\r\n          following ? this.profile.followingCount++ : this.profile.followingCount--;\r\n        }\r\n\r\n        this.followings.forEach((profile) => {\r\n          if (profile.username === username) {\r\n            profile.following ? profile.followersCount-- : profile.followersCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setLoading(false);\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.setLoadingFollowing(true);\r\n\r\n    try {\r\n      if (this.profile?.username) {\r\n        const profileFollowings = await agent.Profiles.listFollowing(\r\n          this.profile?.username,\r\n          predicate\r\n        );\r\n        runInAction(() => {\r\n          this.followings = profileFollowings;\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setLoadingFollowing(false);\r\n    }\r\n  };\r\n\r\n  loadActivities = async (username: string, predicate: string) => {\r\n    this.setLoadingActivities(true);\r\n\r\n    try {\r\n      if (this.profile) {\r\n        const activities = await agent.Profiles.activities(username, predicate);\r\n        this.formatDates(activities);\r\n        runInAction(() => {\r\n          this.userActivities = activities;\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setLoadingActivities(false);\r\n    }\r\n  };\r\n\r\n  setLoadingActivities = (state: boolean) => (this.loadingActivities = state);\r\n\r\n  formatDates = (activities: UserActivity[]) => {\r\n    activities.map((activity) => {\r\n      activity.date = new Date(activity.date + 'Z');\r\n      return activity;\r\n    });\r\n  };\r\n}\r\n","import agent from 'app/api/agent';\r\nimport { User, UserFormValues } from 'app/models/user';\r\nimport { history } from 'index';\r\nimport { makeAutoObservable, runInAction } from 'mobx';\r\nimport { constants } from '../common/constants/constant';\r\nimport { store } from './stores';\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n  fbAccessToken: string | null = null;\r\n  fbLoading = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn(): boolean {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      this.setUser(user);\r\n\r\n      history.push(constants.activities);\r\n\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    window.localStorage.removeItem(constants.jwt);\r\n    this.setUser(null);\r\n\r\n    history.push(constants.home);\r\n  };\r\n\r\n  register = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.register(creds);\r\n      store.commonStore.setToken(user.token);\r\n      this.setUser(user);\r\n\r\n      history.push(constants.activities);\r\n\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  setDisplayName = (name: string) => {\r\n    if (this.user) this.user.displayName = name;\r\n  };\r\n\r\n  setImage = (image: string) => {\r\n    if (this.user) this.user.image = image;\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      this.setUser(user);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  setUser = (user: User | null) => {\r\n    this.user = user;\r\n  };\r\n\r\n  setFbLoading = (status: boolean) => {\r\n    this.fbLoading = status;\r\n  };\r\n\r\n  getFacebookLoginStatus = async () => {\r\n    window.FB.getLoginStatus((response) => {\r\n      if (response.status === 'connected') {\r\n        this.fbAccessToken = response.authResponse.accessToken;\r\n      }\r\n    });\r\n  };\r\n\r\n  facebookLogin = () => {\r\n    this.setFbLoading(true);\r\n\r\n    const apiLogin = (accessToken: string) => {\r\n      agent.Account.fbLogin(accessToken)\r\n        .then((user) => {\r\n          store.commonStore.setToken(user.token);\r\n          runInAction(() => {\r\n            this.user = user;\r\n          });\r\n\r\n          history.push('/activities');\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        })\r\n        .finally(() => this.setFbLoading(false));\r\n    };\r\n\r\n    if (this.fbAccessToken) {\r\n      apiLogin(this.fbAccessToken);\r\n    } else {\r\n      window.FB.login(\r\n        (response) => {\r\n          apiLogin(response.authResponse.accessToken);\r\n        },\r\n        { scope: 'public_profile,email' }\r\n      );\r\n    }\r\n  };\r\n}\r\n","import { createContext, useContext } from 'react';\r\nimport ActivityStore from './activityStore';\r\nimport CommentStore from './commentStore';\r\nimport CommonStore from './commonStore';\r\nimport ModalStore from './modalStore';\r\nimport ProfileStore from './profileStore';\r\nimport UserStore from './userStore';\r\n\r\ninterface Store {\r\n  activityStore: ActivityStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  activityStore: new ActivityStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(),\r\n  commentStore: new CommentStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n  return useContext(StoreContext);\r\n}\r\n","import { constants } from 'app/common/constants/constant';\r\nimport { ServerError } from 'app/models/ServerError';\r\nimport { makeAutoObservable, reaction } from 'mobx';\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = window.localStorage.getItem(constants.jwt);\r\n  appLoaded = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.token,\r\n      (token) => {\r\n        if (token) {\r\n          window.localStorage.setItem(constants.jwt, token);\r\n        } else {\r\n          window.localStorage.removeItem(constants.jwt);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  };\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n  };\r\n\r\n  setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\n\r\ninterface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null,\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (content: JSX.Element) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  };\r\n}\r\n","import { HubConnection, HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\r\nimport { ChatComment, ChatCommentFormValues } from 'app/models/comment';\r\nimport { makeAutoObservable, runInAction } from 'mobx';\r\nimport { store } from './stores';\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (activityId: string) => {\r\n    if (store.activityStore.selectedActivity) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\r\n          accessTokenFactory: () => store.userStore.user?.token!,\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.None)\r\n        .build();\r\n\r\n      this.hubConnection\r\n        .start()\r\n        .catch((error) => console.log('Error starting the connection\\n', error));\r\n\r\n      this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\r\n        runInAction(() => {\r\n          comments.forEach((comment) => {\r\n            comment.createdAt = new Date(comment.createdAt + 'Z');\r\n          });\r\n          this.comments = comments;\r\n        });\r\n      });\r\n\r\n      this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\r\n        runInAction(() => {\r\n          comment.createdAt = new Date(comment.createdAt);\r\n          this.comments.unshift(comment);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection\r\n      ?.stop()\r\n      .catch((error) => console.log('Error stopping the connection\\n', error));\r\n  };\r\n\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  };\r\n\r\n  addComment = async (values: ChatCommentFormValues) => {\r\n    values.activityId = store.activityStore.selectedActivity!.id;\r\n\r\n    try {\r\n      await this.hubConnection?.invoke('SendComment', values);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n","import { useStore } from 'app/stores/stores';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Button, Container, Menu, Image, Dropdown } from 'semantic-ui-react';\r\n\r\nexport default observer(function NavBar() {\r\n  const {\r\n    userStore: { user, logout, isLoggedIn },\r\n  } = useStore();\r\n\r\n  \r\n\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} exact to=\"/\" header>\r\n          <img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: '10px' }} />\r\n          Reactivities\r\n        </Menu.Item>\r\n        {isLoggedIn && (\r\n          <>\r\n            <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\r\n            <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\r\n            <Menu.Item>\r\n              <Button as={NavLink} to=\"/create-activity\" positive content=\"Create Activity\" />\r\n            </Menu.Item>\r\n            <Menu.Item position=\"right\">\r\n              <Image src={user?.image || '/assets/user.png'} avatar spaced=\"right\" />\r\n              <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    as={Link}\r\n                    to={`/profiles/${user?.username}`}\r\n                    text=\"My Profile\"\r\n                    icon=\"user\"\r\n                  />\r\n                  <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Menu.Item>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Menu>\r\n  );\r\n});\r\n","import React, { SyntheticEvent } from 'react';\r\nimport { Profile } from 'app/models/profile';\r\nimport { Button, Reveal } from 'semantic-ui-react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useStore } from 'app/stores/stores';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  if (userStore.user?.username === profile.username) return null;\r\n\r\n  function handleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n\r\n    profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\r\n  }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: '100%' }}>\r\n        <Button fluid color=\"teal\" content={profile.following ? 'Following' : 'Not following'} />\r\n      </Reveal.Content>\r\n\r\n      <Reveal.Content hidden style={{ width: '100%' }}>\r\n        <Button\r\n          basic\r\n          fluid\r\n          color={profile.following ? 'red' : 'green'}\r\n          content={profile.following ? 'Unfollow' : 'Follow'}\r\n          onClick={(e) => handleFollow(e, profile.username)}\r\n          loading={loading}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Card, Icon, Image } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport FollowButton from './FollowButton';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n  function truncate(str: string | undefined) {\r\n    if (str) {\r\n      return str.length > 40 ? str.substring(0, 37) + '...' : str;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || '/assets/user.png'} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount === 1\r\n          ? `${profile.followersCount} follower`\r\n          : `${profile.followersCount} followers`}\r\n      </Card.Content>\r\n\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Image, List, Popup } from 'semantic-ui-react';\r\nimport { Profile } from 'app/models/profile';\r\nimport { Link } from 'react-router-dom';\r\nimport ProfileCard from '../../profiles/ProfileCard';\r\n\r\ninterface Props {\r\n  attendees?: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({ attendees }: Props) {\r\n  const styles = {\r\n    borderColor: 'orange',\r\n    borderWidth: 3,\r\n  };\r\n\r\n  return (\r\n    <List horizontal>\r\n      {attendees?.map((attendee) => (\r\n        <Popup\r\n          hoverable\r\n          key={attendee.username}\r\n          trigger={\r\n            <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\r\n              <Image\r\n                size=\"mini\"\r\n                circular\r\n                src={attendee.image || '/assets/user.png'}\r\n                bordered\r\n                style={attendee.following ? styles : null}\r\n              />\r\n            </List.Item>\r\n          }\r\n        >\r\n          <Popup.Content>\r\n            <ProfileCard profile={attendee} />\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Activity } from 'app/models/activity';\r\nimport { Button, Icon, Item, Label, Segment } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nimport ActivityListItemAttendee from './ActivityListItemAttendee';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityListItem({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {activity.isCancelled && (\r\n          <Label attached=\"top\" color=\"red\" content=\"Cancelled\" style={{ textAlign: 'center' }} />\r\n        )}\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              style={{ marginBottom: 3 }}\r\n              size=\"tiny\"\r\n              circular\r\n              src={activity.host?.image || '/assets/user.png'}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n\r\n              <Item.Description>\r\n                Hosted by{' '}\r\n                <Link to={`/profiles/${activity.hostUsername}`}>{activity.host?.displayName}</Link>\r\n              </Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"orange\">\r\n                    You are hosting this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"green\">\r\n                    You are going to this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"clock\" />\r\n          {format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n          <Icon name=\"marker\" />\r\n          {activity.venue}\r\n        </span>\r\n      </Segment>\r\n\r\n      <Segment secondary>\r\n        <ActivityListItemAttendee attendees={activity?.attendees} />\r\n      </Segment>\r\n\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          color=\"teal\"\r\n          floated=\"right\"\r\n          content=\"View\"\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import React, { Fragment } from 'react';\r\nimport { useStore } from 'app/stores/stores';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Header } from 'semantic-ui-react';\r\nimport ActivityListItem from './ActivityListItem';\r\n\r\nexport default observer(function ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activityList]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>\r\n\r\n          {activityList.map((activity) => (\r\n            <ActivityListItem key={activity.id} activity={activity} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import { useStore } from 'app/stores/stores';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport { Header, Icon, Menu } from 'semantic-ui-react';\r\n\r\nexport default observer(function ActivityFilters() {\r\n  const { activityStore } = useStore();\r\n  const { setPredicate, predicate } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      <Menu vertical size=\"large\" style={{ width: '100%', marginTop: 28 }}>\r\n        <Header attached color=\"teal\">\r\n          <Icon name=\"filter\" />\r\n          Filters\r\n        </Header>\r\n        <Menu.Item\r\n          content=\"All Activities\"\r\n          active={predicate.has('all')}\r\n          onClick={() => setPredicate('all', 'true')}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm going\"\r\n          active={predicate.has('isGoing')}\r\n          onClick={() => setPredicate('isGoing', 'true')}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm hosting\"\r\n          active={predicate.has('isHost')}\r\n          onClick={() => setPredicate('isHost', 'true')}\r\n        />\r\n      </Menu>\r\n\r\n      <Header />\r\n      <Calendar\r\n        onChange={(date: Date) => setPredicate('startDate', date)}\r\n        value={predicate.get('startDate') || new Date()}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 25 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Grid, Loader } from 'semantic-ui-react';\r\nimport ActivityList from './ActivityList';\r\nimport { useStore } from 'app/stores/stores';\r\nimport { observer } from 'mobx-react-lite';\r\nimport ActivityFilters from './ActivityFilters';\r\nimport { PagingParams } from 'app/models/pagination';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\r\n\r\nexport default observer(function ActivityDashboard() {\r\n  const { activityStore } = useStore();\r\n  const { activityRegistry, loadActivities, loadingInitial, setPagingParams, pagination } =\r\n    activityStore;\r\n  const [loadingNext, setLoadingNext] = useState<boolean>();\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activityRegistry.size <= 1) loadActivities();\r\n  }, [loadActivities, activityRegistry]);\r\n\r\n  return (\r\n    <Grid fluid=\"true\">\r\n      <Grid.Column width=\"10\">\r\n        {loadingInitial && !loadingNext ? (\r\n          <>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\r\n            initialLoad={false}\r\n          >\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  type?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import MyTextInput from 'app/common/form/MyTextInput';\r\nimport { useStore } from 'app/stores/stores';\r\nimport { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header, Label } from 'semantic-ui-react';\r\n\r\nexport default observer(function LoginForm() {\r\n  const { userStore } = useStore();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: '', password: '', error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.login(values).catch((error) => setErrors({ error: 'Invalid email or password' }))\r\n      }\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header as=\"h2\" content=\"Login in to Reactivities\" color=\"teal\" textAlign=\"center\" />\r\n          <MyTextInput placeholder={'Email'} name={'email'} type=\"email\" />\r\n          <MyTextInput placeholder={'Password'} name={'password'} type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => (\r\n              <Label style={{ marginBottom: 10 }} basic color=\"red\" content={errors.error} />\r\n            )}\r\n          />\r\n          <Button loading={isSubmitting} positive content=\"Login\" type=\"submit\" fluid />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((err: any, i: any) => (\r\n            <Message.Item key={i}>{err}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  );\r\n}\r\n","import MyTextInput from 'app/common/form/MyTextInput';\r\nimport { useStore } from 'app/stores/stores';\r\nimport ValidationErrors from 'features/errors/ValidationErrors';\r\nimport { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header } from 'semantic-ui-react';\r\nimport * as Yup from 'yup';\r\n\r\nexport default observer(function RegisterForm() {\r\n  const { userStore } = useStore();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: '', username: '', email: '', password: '', error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.register(values).catch((error) => setErrors({ error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        username: Yup.string().required(),\r\n        email: Yup.string().required().email(),\r\n        password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form className=\"ui form error\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header as=\"h2\" content=\"Sign up to Reactivities\" color=\"teal\" textAlign=\"center\" />\r\n          <MyTextInput placeholder={'Display Name'} name={'displayName'} type=\"text\" />\r\n          <MyTextInput placeholder={'User Name'} name={'username'} type=\"text\" />\r\n          <MyTextInput placeholder={'Email'} name={'email'} type=\"email\" />\r\n          <MyTextInput placeholder={'Password'} name={'password'} type=\"password\" />\r\n          <ErrorMessage name=\"error\" render={() => <ValidationErrors errors={errors.error} />} />\r\n          <Button\r\n            disabled={!isValid || !dirty || isSubmitting}\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Register\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { constants } from 'app/common/constants/constant';\r\nimport { useStore } from 'app/stores/stores';\r\nimport LoginForm from 'features/users/LoginForm';\r\nimport RegisterForm from 'features/users/RegisterForm';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container, Divider, Header, Image, Segment } from 'semantic-ui-react';\r\n\r\nexport default observer(function HomePage() {\r\n  const { userStore, modalStore } = useStore();\r\n\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image size=\"massive\" src=\"/assets/logo.png\" alt=\"logo\" style={{ marginBottom: 12 }} />\r\n          Reactivities\r\n        </Header>\r\n\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as=\"h2\" inverted>\r\n              Welcome to Reactivities\r\n            </Header>\r\n\r\n            <Button as={Link} to={constants.activities} size=\"huge\" inverted>\r\n              Go to Activities!\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button onClick={() => modalStore.openModal(<LoginForm />)} size=\"huge\" inverted>\r\n              Login!\r\n            </Button>\r\n\r\n            <Button onClick={() => modalStore.openModal(<RegisterForm />)} size=\"huge\" inverted>\r\n              Register!\r\n            </Button>\r\n\r\n            <Divider horizontal inverted>\r\n              Or\r\n            </Divider>\r\n\r\n            <Button\r\n              size=\"huge\"\r\n              loading={userStore.fbLoading}\r\n              inverted\r\n              color=\"facebook\"\r\n              onClick={userStore.facebookLogin}\r\n            >\r\n              Login with Facebook\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  inverted?: boolean;\r\n  content?: string;\r\n}\r\n\r\nexport default function LoadingComponent({\r\n  inverted = true,\r\n  content = 'Loading...',\r\n}: Props) {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n}\r\n","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  rows: number;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label, Select } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  options: any;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, data) => helpers.setValue(data.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      ></Select>\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","export const categoryOptions = [\r\n  { text: 'Drinks', value: 'drinks' },\r\n  { text: 'Culture', value: 'culture' },\r\n  { text: 'Film', value: 'film' },\r\n  { text: 'Food', value: 'food' },\r\n  { text: 'Music', value: 'music' },\r\n  { text: 'Travel', value: 'travel' },\r\n];\r\n","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker';\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value) => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport MyTextInput from 'app/common/form/MyTextInput';\r\nimport LoadingComponent from 'app/layout/LoadingComponent';\r\nimport { useStore } from 'app/stores/stores';\r\nimport { Formik, Form } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport * as Yup from 'yup';\r\nimport MyTextArea from 'app/common/form/MyTextArea';\r\nimport MySelectInput from 'app/common/form/MySelectInput';\r\nimport { categoryOptions } from 'app/common/options/categoryOptions';\r\nimport MyDateInput from 'app/common/form/MyDateInput';\r\nimport { ActivityFormValues } from 'app/models/activity';\r\n\r\nexport default observer(function ActivityForm() {\r\n  const history = useHistory();\r\n  const { activityStore } = useStore();\r\n  const { createActivity, updateActivity, loadActivity, loadingInitial } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required('The activity title is required'),\r\n    description: Yup.string().required('The activity description is required'),\r\n    category: Yup.string().required('The activity category is required'),\r\n    date: Yup.string().required('The activity date is required').nullable(),\r\n    city: Yup.string().required('The activity city is required'),\r\n    venue: Yup.string().required('The activity venue is required'),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      loadActivity(id).then((activity) => {\r\n        if (activity) setActivity(new ActivityFormValues(activity));\r\n      });\r\n    }\r\n  }, [id, loadActivity]);\r\n\r\n  const handleFormSubmit = (activity: ActivityFormValues) => {\r\n    if (!activity.id) {\r\n      const newActivity = { ...activity, id: uuid() };\r\n\r\n      createActivity(newActivity).then(() => {\r\n        history.push(`/activities/${newActivity.id}`);\r\n      });\r\n    } else {\r\n      updateActivity(activity).then(() => history.push(`/activities/${activity.id}`));\r\n    }\r\n  };\r\n\r\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Activity Details\" sub color=\"teal\" />\r\n      <Formik\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\r\n            <MyTextArea placeholder=\"Description\" name=\"description\" rows={3} />\r\n            <MySelectInput placeholder=\"Category\" name=\"category\" options={categoryOptions} />\r\n            <MyDateInput\r\n              placeholderText=\"Date\"\r\n              name=\"date\"\r\n              showTimeSelect\r\n              timeCaption=\"time\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n            />\r\n            <Header content=\"Location Details\" sub color=\"teal\" />\r\n\r\n            <MyTextInput placeholder=\"City\" name=\"city\" />\r\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\r\n            <Button\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"submit\"\r\n              loading={isSubmitting}\r\n              disabled={isSubmitting || !dirty || !isValid}\r\n            />\r\n            <Button as={Link} to=\"/activities\" floated=\"right\" type=\"button\" content=\"cancel\" />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import { useStore } from 'app/stores/stores';\r\nimport { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Item, Segment, Image, Label } from 'semantic-ui-react';\r\nimport { Activity } from '../../../app/models/activity';\r\n\r\nconst activityImageStyle = {\r\n  filter: 'brightness(30%)',\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: 'absolute',\r\n  bottom: '5%',\r\n  left: '5%',\r\n  width: '100%',\r\n  height: 'auto',\r\n  color: 'white',\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n  const {\r\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: '0' }}>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n            style={{ position: 'absolute', zIndex: 1000, left: -14, top: 20 }}\r\n          />\r\n        )}\r\n        <Image\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header size=\"huge\" content={activity.title} style={{ color: 'white' }} />\r\n                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\r\n                <p>\r\n                  Hosted by{' '}\r\n                  <strong>\r\n                    <Link to={`/profiles/${activity.host?.username}`}>\r\n                      {activity.host?.displayName}\r\n                    </Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <>\r\n            <Button\r\n              color={activity.isCancelled ? 'green' : 'red'}\r\n              floated=\"left\"\r\n              basic\r\n              content={activity.isCancelled ? 'Re-activate Activity' : 'Cancel Activity'}\r\n              onClick={cancelActivityToggle}\r\n              loading={loading}\r\n            />\r\n            <Button\r\n              disabled={activity.isCancelled}\r\n              color=\"orange\"\r\n              floated=\"right\"\r\n              as={Link}\r\n              to={`/manage/${activity.id}`}\r\n            >\r\n              Manage Event\r\n            </Button>\r\n          </>\r\n        ) : activity.isGoing ? (\r\n          <Button loading={loading} onClick={updateAttendance}>\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            disabled={activity.isCancelled}\r\n            loading={loading}\r\n            onClick={updateAttendance}\r\n            color=\"teal\"\r\n          >\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Segment, Grid, Icon } from 'semantic-ui-react';\r\nimport { Activity } from '../../../app/models/activity';\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date!, 'dd MMM yyyy h:mm aa')}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { useStore } from 'app/stores/stores';\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport { Formik, Form, Field, FieldProps } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Segment, Header, Comment, Loader } from 'semantic-ui-react';\r\nimport * as Yup from 'yup';\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n\r\n    return () => {\r\n      commentStore.clearComments(); // Will also stop the connection\r\n    };\r\n  }, [commentStore, activityId]);\r\n\r\n  return (\r\n    <>\r\n      <Segment textAlign=\"center\" attached=\"top\" inverted color=\"teal\" style={{ border: 'none' }}>\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment clearing>\r\n        <Formik\r\n          initialValues={{ activityId: '', body: '' }}\r\n          validationSchema={Yup.object({\r\n            body: Yup.string().required('Please enter a message'),\r\n          })}\r\n          onSubmit={(values, { resetForm }) =>\r\n            commentStore.addComment(values).then(() => resetForm())\r\n          }\r\n        >\r\n          {({ isValid, isSubmitting, handleSubmit }) => (\r\n            <Form className=\"ui form\">\r\n              <Field name=\"body\">\r\n                {(props: FieldProps) => (\r\n                  <div style={{ position: 'relative' }}>\r\n                    <Loader active={isSubmitting} />\r\n                    <textarea\r\n                      placeholder=\"Enter your comment (Enter to submit, SHIFT + enter for new line)\"\r\n                      rows={2}\r\n                      {...props.field}\r\n                      onKeyPress={(e) => {\r\n                        if (e.key === 'Enter' && e.shiftKey) {\r\n                          return;\r\n                        }\r\n\r\n                        if (e.key === 'Enter' && !e.shiftKey) {\r\n                          e.preventDefault();\r\n                          isValid && handleSubmit();\r\n                        }\r\n                      }}\r\n                    ></textarea>\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Comment.Group>\r\n          {commentStore.comments.map((chatComment) => (\r\n            <Comment key={chatComment.id}>\r\n              <Comment.Avatar src={chatComment.image || '/assets/user.png'} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${chatComment.username}`}>\r\n                  {chatComment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(chatComment.createdAt)} ago</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{ whiteSpace: 'pre-wrap' }}>{chatComment.body}</Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Activity } from 'app/models/activity';\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({ activity: { attendees, host } }: Props) {\r\n  if (!attendees) return null;\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: 'none' }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map((attendee) => (\r\n            <Item style={{ position: 'relative' }} key={attendee.username}>\r\n              {attendee.username === host?.username && (\r\n                <Label style={{ position: 'absolute' }} color=\"orange\" ribbon=\"right\">\r\n                  Host\r\n                </Label>\r\n              )}\r\n\r\n              <Image size=\"tiny\" src={attendee.image || '/assets/user.png'} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\r\n                </Item.Header>\r\n                {attendee.following && (\r\n                  <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>\r\n                )}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport LoadingComponent from 'app/layout/LoadingComponent';\r\nimport { useStore } from 'app/stores/stores';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\r\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\r\nimport ActivityDetailedChat from './ActivityDetailedChat';\r\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const { activityStore } = useStore();\r\n  const { id } = useParams<{ id: string }>();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    loadingInitial,\r\n    clearSelectedActivity,\r\n  } = activityStore;\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n\r\n    return () => {\r\n      clearSelectedActivity();\r\n    };\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  if (loadingInitial || !activity) return <LoadingComponent />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        <ActivityDetailedHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat activityId={id} />\r\n      </Grid.Column>\r\n\r\n      <Grid.Column width=\"6\">\r\n        <ActivityDetailedSidebar activity={activity!} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React, { useState } from 'react';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nexport default function TestErrors() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  function handleNotFound() {\r\n    axios.get(baseUrl + 'buggy/not-found').catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios.get(baseUrl + 'buggy/bad-request').catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios.get(baseUrl + 'buggy/server-error').catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorised() {\r\n    axios.get(baseUrl + 'buggy/unauthorised').catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios.get(baseUrl + 'activities/notaguid').catch((err) => console.log(err));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(baseUrl + 'activities', {}).catch((err) => setErrors(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button onClick={handleBadRequest} content=\"Bad Request\" basic primary />\r\n          <Button onClick={handleValidationError} content=\"Validation Error\" basic primary />\r\n          <Button onClick={handleServerError} content=\"Server Error\" basic primary />\r\n          <Button onClick={handleUnauthorised} content=\"Unauthorised\" basic primary />\r\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n\r\n      {errors && <ValidationErrors errors={errors} />}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Oops - Not We've looked everywhere and could not find this.\r\n      </Header>\r\n\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/activities\" primary>\r\n          Return to Activities Page\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useStore } from 'app/stores/stores';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Container, Header, Segment } from 'semantic-ui-react';\r\n\r\nexport default observer(function ServerError() {\r\n  const { commonStore } = useStore();\r\n\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server Error\" />\r\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\r\n      {commonStore.error?.details && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack Trace\" color=\"teal\" />\r\n          <code style={{ marginTop: '10px' }}>{commonStore.error.details}</code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","import { useStore } from 'app/stores/stores';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\n\r\nexport default observer(function ModalContainer() {\r\n  const { modalStore } = useStore();\r\n\r\n  return (\r\n    <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size=\"mini\">\r\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport Cropper from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({ imagePreview, setCropper }: Props) {\r\n  console.log('Called from PhotoWidgetCropper', imagePreview);\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: '100%' }}\r\n      preview=\".img-preview\"\r\n      // Cropper.js options\r\n      initialAspectRatio={1}\r\n      viewMode={1}\r\n      guides={false}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={(cropper) => setCropper(cropper)}\r\n    />\r\n  );\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { Header, Icon } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropZone({ setFiles }: Props) {\r\n  const dzStyles = {\r\n    borderStyle: 'dashed',\r\n    borderWidth: '3px',\r\n    borderColor: '#eee',\r\n    borderRadius: '5px',\r\n    paddingTop: '30px',\r\n    textAlign: 'center' as 'center',\r\n    height: 200,\r\n  };\r\n\r\n  const dzActiveStyles = {\r\n    borderColor: 'green',\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file: any) => {\r\n          console.log('Called from PhotoWidgetDropZone', file);\r\n          return Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          });\r\n        })\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div {...getRootProps()} style={isDragActive ? { ...dzStyles, ...dzActiveStyles } : dzStyles}>\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Grid, Header } from 'semantic-ui-react';\r\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\r\nimport PhotoWidgetDropZone from './PhotoWidgetDropZone';\r\n\r\ninterface Props {\r\n  handlePhotoUpload: (file: Blob) => void;\r\n  uploading: boolean;\r\n}\r\n\r\nexport default function PhotoUploadWidget({ handlePhotoUpload, uploading }: Props) {\r\n  const [files, setFiles] = useState<any>([]);\r\n\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => handlePhotoUpload(blob!));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n        <PhotoWidgetDropZone setFiles={setFiles} />\r\n      </Grid.Column>\r\n\r\n      <Grid.Column width={1} />\r\n\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper\r\n            setCropper={setCropper}\r\n            imagePreview={files.length > 0 ? files[0].preview : ''}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n\r\n      <Grid.Column width={1} />\r\n\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Preview & Upload\" />\r\n        <>\r\n          <div className=\"img-preview\" style={{ minHeight: 200, overflow: 'hidden' }} />\r\n          {files && files.length > 0 && (\r\n            <Button.Group widths={2} style={{ marginTop: 10 }}>\r\n              <Button onClick={onCrop} positive icon=\"check\" loading={uploading} />\r\n              <Button\r\n                onClick={() => {\r\n                  setFiles([]);\r\n                  console.log('Called from PhotoUploadWidget', files);\r\n                }}\r\n                icon=\"close\"\r\n                disabled={uploading}\r\n              />\r\n            </Button.Group>\r\n          )}\r\n        </>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import PhotoUploadWidget from 'app/common/imageUpload/PhotoUploadWidget';\r\nimport { Photo, Profile } from 'app/models/profile';\r\nimport { useStore } from 'app/stores/stores';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { SyntheticEvent, useState } from 'react';\r\nimport { Button, Card, Grid, Header, Image, Tab } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const {\r\n    profileStore: { isCurrentUser, uploadPhoto, uploading, loading, setMainPhoto, deletePhoto },\r\n  } = useStore();\r\n\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState('');\r\n  const [deleteTarget, setDeleteTarget] = useState('');\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n    setDeleteTarget(e.currentTarget.name);\r\n    deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? 'Cancel' : 'Add Photo'}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget handlePhotoUpload={handlePhotoUpload} uploading={uploading} />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                      <Button\r\n                        basic\r\n                        color=\"green\"\r\n                        content=\"Main\"\r\n                        name={photo.id}\r\n                        disabled={photo.isMain}\r\n                        loading={target === photo.id && loading}\r\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                      />\r\n\r\n                      <Button\r\n                        basic\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                        name={photo.id}\r\n                        loading={deleteTarget === photo.id && loading}\r\n                        onClick={(e) => handleDeletePhoto(photo, e)}\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import MyTextArea from 'app/common/form/MyTextArea';\r\nimport MyTextInput from 'app/common/form/MyTextInput';\r\nimport { useStore } from 'app/stores/stores';\r\nimport { Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nimport * as Yup from 'yup';\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { profile, updateProfile },\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      onSubmit={(values) => {\r\n        updateProfile(values).then(() => {\r\n          setEditMode(false);\r\n        });\r\n      }}\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required('Your display name is required'),\r\n      })}\r\n    >\r\n      {({ isSubmitting, isValid, dirty }) => (\r\n        <Form className=\"ui form\">\r\n          <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\r\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\r\n          <Button\r\n            positive\r\n            type=\"submit\"\r\n            loading={isSubmitting}\r\n            content=\"Update profile\"\r\n            floated=\"right\"\r\n            disabled={!isValid || !dirty}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React, { useState } from 'react';\r\nimport { Button, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport ProfileEditForm from './form/ProfileEditForm';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useStore } from 'app/stores/stores';\r\n\r\nexport default observer(function ProfileAbout() {\r\n  const { profileStore } = useStore();\r\n  const { isCurrentUser, profile } = profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width=\"16\">\r\n          <Header floated=\"left\" icon=\"user\" content={`About ${profile?.displayName}`} />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? 'Cancel' : 'Edit Profile'}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width=\"16\">\r\n          {editMode ? (\r\n            <ProfileEditForm setEditMode={setEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: 'pre-wrap' }}>{profile?.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { useStore } from 'app/stores/stores';\r\nimport ProfileCard from './ProfileCard';\r\n\r\nexport default observer(function ProfileFollowings() {\r\n  const {\r\n    profileStore: { profile, followings, loadingFollowings, activeTab },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={\r\n              activeTab === 3\r\n                ? `People following ${profile?.displayName}`\r\n                : `People ${profile?.displayName} is following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map((follower) => (\r\n              <ProfileCard key={profile?.username} profile={follower} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { UserActivity } from 'app/models/profile';\r\nimport { format } from 'date-fns';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Image } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  activity: UserActivity;\r\n}\r\n\r\nexport default function ProfileActivityCard({ activity }: Props) {\r\n  function truncate(str: string | undefined) {\r\n    if (str) {\r\n      return str.length > 40 ? str.substring(0, 37) + '...' : str;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card as={Link} to={`/activities/${activity.id}`}>\r\n      <Image\r\n        styles={{ minHeight: 100, objectFit: 'cover' }}\r\n        src={`/assets/categoryImages/${activity.category}.jpg`}\r\n      />\r\n      <Card.Content>\r\n        <Card.Header textAlign=\"center\">{truncate(activity.title)}</Card.Header>\r\n        <Card.Meta textAlign=\"center\">\r\n          <div>{format(new Date(activity.date), 'do MMM')}</div>\r\n          <div>{format(new Date(activity.date), 'p')}</div>\r\n        </Card.Meta>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n}\r\n","import { UserActivity } from 'app/models/profile';\r\nimport { useStore } from 'app/stores/stores';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Card, Tab } from 'semantic-ui-react';\r\nimport ProfileActivityCard from './ProfileActivityCard';\r\n\r\ninterface Props {\r\n  activities: UserActivity[];\r\n}\r\n\r\nexport default observer(function ProfileListCard({ activities }: Props) {\r\n  const { profileStore } = useStore();\r\n  const { loadingActivities } = profileStore;\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Card.Group itemsPerRow={4}>\r\n        {activities.map((activity) => (\r\n          <ProfileActivityCard key={activity.id} activity={activity} />\r\n        ))}\r\n      </Card.Group>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { useStore } from 'app/stores/stores';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Grid, Header, Tab } from 'semantic-ui-react';\r\nimport ProfileListCard from './ProfileListCard';\r\n\r\nexport default observer(function ProfileActivity() {\r\n  const { profileStore } = useStore();\r\n  const { userActivities, setActivityTab } = profileStore;\r\n\r\n  const panes = [\r\n    { menuItem: 'Future Events', render: () => <ProfileListCard activities={userActivities} /> },\r\n    { menuItem: 'Past Events', render: () => <ProfileListCard activities={userActivities} /> },\r\n    { menuItem: 'Hosting', render: () => <ProfileListCard activities={userActivities} /> },\r\n  ];\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content=\"Activities\" />\r\n        </Grid.Column>\r\n\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            menu={{ secondary: true, pointing: true }}\r\n            menuPosition=\"right\"\r\n            panes={panes}\r\n            onTabChange={(e, data) => setActivityTab(data.activeIndex)}\r\n          />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { Profile } from 'app/models/profile';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Tab } from 'semantic-ui-react';\r\nimport ProfilePhotos from './ProfilePhotos';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileFollowings from './ProfileFollowings';\r\nimport ProfileActivity from './ProfileActivity';\r\nimport { useStore } from 'app/stores/stores';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n  const { profileStore } = useStore();\r\n\r\n  const panes = [\r\n    { menuItem: 'About', render: () => <ProfileAbout /> },\r\n    { menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} /> },\r\n    { menuItem: 'Events', render: () => <ProfileActivity /> },\r\n    { menuItem: 'Followers', render: () => <ProfileFollowings /> },\r\n    { menuItem: 'Following', render: () => <ProfileFollowings /> },\r\n  ];\r\n\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Profile } from 'app/models/profile';\r\nimport { Divider, Grid, Header, Item, Segment, Statistic } from 'semantic-ui-react';\r\nimport FollowButton from './FollowButton';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile }: Props) {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image avatar size=\"small\" src={profile.image || '/assets/user.png'} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n\r\n          <Divider />\r\n\r\n          <FollowButton profile={profile} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n});\r\n","import LoadingComponent from 'app/layout/LoadingComponent';\r\nimport { useStore } from 'app/stores/stores';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport ProfileContent from './ProfileContent';\r\nimport ProfileHeader from './ProfileHeader';\r\n\r\nexport default observer(function ProfilePage() {\r\n  const { profileStore } = useStore();\r\n  const { username } = useParams<{ username: string }>();\r\n  const { loadProfile, loadingProfile, profile, setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n\r\n    return () => {\r\n      setActiveTab(0);\r\n    };\r\n  }, [loadProfile, username, setActiveTab]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile && (\r\n          <>\r\n            <ProfileHeader profile={profile} />\r\n            <ProfileContent profile={profile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { useStore } from 'app/stores/stores';\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from 'react-router';\r\n\r\ninterface Props extends RouteProps {\r\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => (isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />)}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\nimport NavBar from './NavBar';\r\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Route, Switch, useLocation } from 'react-router';\r\nimport HomePage from 'features/home/HomePage';\r\nimport ActivityForm from 'features/activities/form/ActivityForm';\r\nimport ActivityDetails from 'features/activities/details/ActivityDetails';\r\nimport TestErrors from 'features/errors/TestError';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport NotFound from 'features/errors/NotFound';\r\nimport ServerError from 'features/errors/ServerError';\r\nimport { useStore } from 'app/stores/stores';\r\nimport LoadingComponent from './LoadingComponent';\r\nimport ModalContainer from 'app/common/modals/ModalContainer';\r\nimport ProfilePage from 'features/profiles/ProfilePage';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n\r\n  const { commonStore, userStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (commonStore.token) {\r\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\r\n    } else {\r\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\r\n    }\r\n  }, [commonStore, userStore]);\r\n\r\n  if (!commonStore.appLoaded) return <LoadingComponent content=\"Loading App...\" />;\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\r\n      <ModalContainer />\r\n      <Route exact path=\"/\" component={HomePage} />\r\n\r\n      <Route\r\n        path={'/(.+)'}\r\n        render={() => (\r\n          <>\r\n            <NavBar />\r\n            <Container style={{ marginTop: '7em' }}>\r\n              <Switch>\r\n                <PrivateRoute exact path=\"/activities\" component={ActivityDashboard} />\r\n                <PrivateRoute path=\"/activities/:id\" component={ActivityDetails} />\r\n                <PrivateRoute\r\n                  path={['/create-activity', '/manage/:id']}\r\n                  component={ActivityForm}\r\n                  key={location.key}\r\n                />\r\n                <PrivateRoute path=\"/profiles/:username\" component={ProfilePage} />\r\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\r\n                <Route path=\"/server-error\" component={ServerError} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport 'react-datepicker/dist/react-datepicker.min.css';\r\nimport './app/layout/styles.css';\r\nimport App from './app/layout/App';\r\nimport ScrollToTop from './app/layout/ScrollToTop';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store, StoreContext } from 'app/stores/stores';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <StoreContext.Provider value={store}>\r\n    <Router history={history}>\r\n      <ScrollToTop />\r\n      <App />\r\n    </Router>\r\n  </StoreContext.Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}